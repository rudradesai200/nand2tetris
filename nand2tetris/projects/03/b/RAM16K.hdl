// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
DMux4Way(a=r1,b=r2,c=r3,d=r4,in=load,sel=address[0..1]);
RAM4K(in=in,load=r1,address=address[2..13],out=rout1);
RAM4K(in=in,load=r2,address=address[2..13],out=rout2);
RAM4K(in=in,load=r3,address=address[2..13],out=rout3);
RAM4K(in=in,load=r4,address=address[2..13],out=rout4);									Mux4Way16(a=rout1,b=rout2,c=rout3,d=rout4,sel=address[0..1],out=out);
    // Put your code here:
}
