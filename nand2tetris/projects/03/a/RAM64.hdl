// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM864.hdl

/**
 * Memory of 64 RAM8s, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
	DMux8Way(a=r1,b=r2,c=r3,d=r4,e=r5,f=r6,g=r7,h=r8,in=load,sel=address[0..2]);
	RAM8(in=in,load=r1,address=address[3..5],out=rout1);
	RAM8(in=in,load=r2,address=address[3..5],out=rout2);
	RAM8(in=in,load=r3,address=address[3..5],out=rout3);
	RAM8(in=in,load=r4,address=address[3..5],out=rout4);
RAM8(in=in,load=r5,address=address[3..5],out=rout5);						RAM8(in=in,load=r6,address=address[3..5],out=rout6);										RAM8(in=in,load=r7,address=address[3..5],out=rout7);													RAM8(in=in,load=r8,address=address[3..5],out=rout8);										Mux8Way16(a=rout1,b=rout2,c=rout3,d=rout4,e=rout5,f=rout6,g=rout7,h=rout8,sel=address[0..2],out=out);
    // Put your code here:
}
